name: Build, Deploy, and Trigger API

on:
  push:
    branches:
      - dev  # Cambia a la rama que prefieras

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Descarga el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3  # Actualizado a la versión más reciente

      # Configura Maven y compila la aplicación con OpenJDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3  # Actualizado a la versión más reciente
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Encuentra el archivo JAR y súbelo al servidor
      - name: Upload JAR via SFTP
        id: upload_step  # Identificador para hacer referencia
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USER: ${{ secrets.SFTP_USER }}
          SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
        run: |
          # Encuentra el archivo JAR que comienza con "reuneme-"
          JAR_FILE=$(ls target/reuneme-*.jar | head -n 1)
          if [ -f "$JAR_FILE" ]; then
            echo "Uploading $JAR_FILE to SFTP server..."
            curl -T "$JAR_FILE" "sftp://$SFTP_USER:$SFTP_PASSWORD@$SFTP_HOST:$SFTP_PORT/path/to/remote/directory/$(basename $JAR_FILE)"
            echo "UPLOAD_SUCCESS=true" >> $GITHUB_ENV  # Guarda éxito en el entorno
          else
            echo "No JAR file found!"
            exit 1
          fi

      # Realiza la llamada API solo si la subida fue exitosa
      - name: Trigger API on Successful Upload
        if: env.UPLOAD_SUCCESS == 'true'  # Condición de éxito
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          API_KEY: ${{ secrets.API_KEY }}
          PTEROSERVER: ${{ secrets.PTEROSERVER }}
        run: |
          echo "Triggering API to start server..."
          curl "https://$SFTP_HOST/api/client/servers/$PTEROSERVER/power" \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -H "Authorization: Bearer $API_KEY" \
            -X POST \
            -d '{
              "signal": "restart"
            }'
